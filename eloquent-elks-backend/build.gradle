plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'com.github.kt3k.coveralls' version '2.11.0'
	id 'org.sonarqube' version '3.1.1'
}

group = 'com.airbnb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	jcenter()
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

jacocoTestReport{
	reports{
		xml.enabled = true
		html.enabled = true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect{
			fileTree(dir: it, exclude: '**/static/docs/**')
		}))
	}
}

coveralls {
	jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}

test {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "eloquent-elks_EloquentElks_Airbnb_API"
		property 'sonar.language', 'java'
		property 'sonar.sources', 'src/main'
		property 'sonar.tests', 'src/test'
		property 'sonar.junit.reportPaths', 'build/test-results/test'
		property 'sonar.java.coveragePlugin', 'jacoco'
		property 'sonar.coverage.jacoco.xmlReportPaths', '**/jacocoTestReport.xml'
		property 'sonar.java.binaries', 'build/classes'
	}
}